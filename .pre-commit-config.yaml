# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-ast                  # Simply check whether the files parse as valid python
      - id: check-case-conflict        # Check for files that would conflict in case-insensitive filesystems
      - id: check-builtin-literals     # Require literal syntax when initializing empty or zero Python builtin types
      - id: check-docstring-first      # Checks a common error of defining a docstring after code
      - id: check-merge-conflict       # Check for files that contain merge conflict strings
      - id: check-toml                 # Attempts to load all TOML files to verify syntax
      - id: check-yaml                 # Attempts to load all YAML files to verify syntax
      - id: debug-statements           # Check for debugger imports and py37+ `breakpoint()` calls in python source
      - id: detect-private-key         # Detects the presence of private keys
      - id: end-of-file-fixer          # Ensures that a file is either empty, or ends with one newline
      - id: mixed-line-ending          # Replaces or checks mixed line ending
      - id: name-tests-test            # Check that test functions are named correctly
        args:
          - --pytest-test-first
      - id: trailing-whitespace        # This hook trims trailing whitespace

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.7
    hooks:
      # run the linter
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      # run the formatter
      - id: ruff-format

  - repo: https://github.com/asottile/add-trailing-comma
    rev: v2.3.0
    hooks:
    - id: add-trailing-comma

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa         # enforce that noqa annotations always occur with specific codes
      - id: python-check-blanket-type-ignore  # enforce that # type: ignore annotations always occur with specific codes
      - id: python-no-log-warn                # check for the deprecated .warn() method of python loggers
      - id: python-use-type-annotations       # enforce that type annotations are used instead of type comments
      - id: rst-backticks                     # detect common mistake of using single backticks when writing rst
      - id: rst-directive-colons              # detect mistake of rst directive not ending with double colon
      - id: rst-inline-touching-normal        # detect mistake of inline code touching normal text in rst

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.3.1
    hooks:
      - id: pyupgrade
        args:
          - --py310-plus
          - --keep-runtime-typing

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort (python)

  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.20.0
    hooks:
      - id: check-github-workflows

  - repo: https://github.com/PyCQA/doc8
    rev: v1.0.0
    hooks:
    - id: doc8

  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.2.3
    hooks:
    - id: pydocstyle
      args:
      - --ignore=D10,D203,D205,D213

  - repo: https://github.com/PyCQA/docformatter
    rev: v1.5.1
    hooks:
    - id: docformatter
      args:
      - --wrap-summaries=88

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks: # https://github.com/python/mypy/issues/4008#issuecomment-582458665
      - id: mypy
        name: mypy
        pass_filenames: true
        args:
          [
            --strict-equality,
            --disallow-untyped-calls,
            --disallow-untyped-defs,
            --disallow-incomplete-defs,
            --disallow-any-generics,
            --check-untyped-defs,
            --disallow-untyped-decorators,
            --warn-redundant-casts,
            --warn-unused-ignores,
            --no-warn-no-return,
            --warn-unreachable,
          ]
        additional_dependencies: ["types-requests", "types-PyYAML"]
